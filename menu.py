

board1 = [[0, 0, 0, 3, 3, 3, 0, 0, 0], 
[0, 0, 0, 3, 3, 3, 0, 0, 0], 
[0, 0, 0, 3, 3, 3, 0, 0, 0],
[3, 3, 3, 3, 3, 3, 3, 3, 3], 
[3, 3, 3, 3, 3, 3, 3, 3, 3], 
[3, 3, 3, 3, 3, 3, 3, 3, 3], 
[0, 0, 0, 3, 3, 3, 0, 0, 0], 
[0, 0, 0, 3, 3, 3, 0, 0, 0], 
[0, 0, 0, 3, 3, 3, 0, 0, 0]]

board2 = [[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0], 
[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0], 
[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0],
[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0],
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0], 
[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0], 
[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0],
[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0]]

board3 = [[0, 0, 0, 0, 3, 3, 3,3, 0, 0, 0, 0], 
[0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0], 
[0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
[0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0], 
[0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0], 
[0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0]]

def initialBoard(var):
    if(var == 1):
        return board1
    elif(var == 2):
        return board2
    else:
        return board3

def verifyWinner(board, PLAYER_TURN):
    PERCORRER BOARD E VER SE UMA PEÇA NAO SE PODE MOVER

def verifyInput(playerInput,playerTurn):


def verifyMove(move):
    

def verticalMovement(move):
    SOMETHING

def horizontalMovement(move):


PESSOA TEM DE DAR AS COORDENADAS DA PEÇA QUE QUER JOGAR
PESSOAR TEM DE DAR AS COORDENADAS FINAIS DESSA PEÇA
SE NAO DER INDICAR LISTA DE JOGADAS(?)
print(1)